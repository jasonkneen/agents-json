# coding: utf-8

"""
    Intercom API

    The intercom API reference.  # noqa: E501

    OpenAPI spec version: 2.11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GroupTranslatedContent(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'ar': 'GroupContent',
        'bg': 'GroupContent',
        'bs': 'GroupContent',
        'ca': 'GroupContent',
        'cs': 'GroupContent',
        'da': 'GroupContent',
        'de': 'GroupContent',
        'el': 'GroupContent',
        'en': 'GroupContent',
        'es': 'GroupContent',
        'et': 'GroupContent',
        'fi': 'GroupContent',
        'fr': 'GroupContent',
        'he': 'GroupContent',
        'hr': 'GroupContent',
        'hu': 'GroupContent',
        'id': 'GroupContent',
        'it': 'GroupContent',
        'ja': 'GroupContent',
        'ko': 'GroupContent',
        'lt': 'GroupContent',
        'lv': 'GroupContent',
        'mn': 'GroupContent',
        'nb': 'GroupContent',
        'nl': 'GroupContent',
        'pl': 'GroupContent',
        'pt': 'GroupContent',
        'ro': 'GroupContent',
        'ru': 'GroupContent',
        'sl': 'GroupContent',
        'sr': 'GroupContent',
        'sv': 'GroupContent',
        'tr': 'GroupContent',
        'vi': 'GroupContent',
        'pt_br': 'GroupContent',
        'zh_cn': 'GroupContent',
        'zh_tw': 'GroupContent'
    }

    attribute_map = {
        'type': 'type',
        'ar': 'ar',
        'bg': 'bg',
        'bs': 'bs',
        'ca': 'ca',
        'cs': 'cs',
        'da': 'da',
        'de': 'de',
        'el': 'el',
        'en': 'en',
        'es': 'es',
        'et': 'et',
        'fi': 'fi',
        'fr': 'fr',
        'he': 'he',
        'hr': 'hr',
        'hu': 'hu',
        'id': 'id',
        'it': 'it',
        'ja': 'ja',
        'ko': 'ko',
        'lt': 'lt',
        'lv': 'lv',
        'mn': 'mn',
        'nb': 'nb',
        'nl': 'nl',
        'pl': 'pl',
        'pt': 'pt',
        'ro': 'ro',
        'ru': 'ru',
        'sl': 'sl',
        'sr': 'sr',
        'sv': 'sv',
        'tr': 'tr',
        'vi': 'vi',
        'pt_br': 'pt-BR',
        'zh_cn': 'zh-CN',
        'zh_tw': 'zh-TW'
    }

    def __init__(self, type=None, ar=None, bg=None, bs=None, ca=None, cs=None, da=None, de=None, el=None, en=None, es=None, et=None, fi=None, fr=None, he=None, hr=None, hu=None, id=None, it=None, ja=None, ko=None, lt=None, lv=None, mn=None, nb=None, nl=None, pl=None, pt=None, ro=None, ru=None, sl=None, sr=None, sv=None, tr=None, vi=None, pt_br=None, zh_cn=None, zh_tw=None):  # noqa: E501
        """GroupTranslatedContent - a model defined in Swagger"""  # noqa: E501
        self._type = None
        self._ar = None
        self._bg = None
        self._bs = None
        self._ca = None
        self._cs = None
        self._da = None
        self._de = None
        self._el = None
        self._en = None
        self._es = None
        self._et = None
        self._fi = None
        self._fr = None
        self._he = None
        self._hr = None
        self._hu = None
        self._id = None
        self._it = None
        self._ja = None
        self._ko = None
        self._lt = None
        self._lv = None
        self._mn = None
        self._nb = None
        self._nl = None
        self._pl = None
        self._pt = None
        self._ro = None
        self._ru = None
        self._sl = None
        self._sr = None
        self._sv = None
        self._tr = None
        self._vi = None
        self._pt_br = None
        self._zh_cn = None
        self._zh_tw = None
        self.discriminator = None
        self.type = type
        if ar is not None:
            self.ar = ar
        if bg is not None:
            self.bg = bg
        if bs is not None:
            self.bs = bs
        if ca is not None:
            self.ca = ca
        if cs is not None:
            self.cs = cs
        if da is not None:
            self.da = da
        if de is not None:
            self.de = de
        if el is not None:
            self.el = el
        if en is not None:
            self.en = en
        if es is not None:
            self.es = es
        if et is not None:
            self.et = et
        if fi is not None:
            self.fi = fi
        if fr is not None:
            self.fr = fr
        if he is not None:
            self.he = he
        if hr is not None:
            self.hr = hr
        if hu is not None:
            self.hu = hu
        if id is not None:
            self.id = id
        if it is not None:
            self.it = it
        if ja is not None:
            self.ja = ja
        if ko is not None:
            self.ko = ko
        if lt is not None:
            self.lt = lt
        if lv is not None:
            self.lv = lv
        if mn is not None:
            self.mn = mn
        if nb is not None:
            self.nb = nb
        if nl is not None:
            self.nl = nl
        if pl is not None:
            self.pl = pl
        if pt is not None:
            self.pt = pt
        if ro is not None:
            self.ro = ro
        if ru is not None:
            self.ru = ru
        if sl is not None:
            self.sl = sl
        if sr is not None:
            self.sr = sr
        if sv is not None:
            self.sv = sv
        if tr is not None:
            self.tr = tr
        if vi is not None:
            self.vi = vi
        if pt_br is not None:
            self.pt_br = pt_br
        if zh_cn is not None:
            self.zh_cn = zh_cn
        if zh_tw is not None:
            self.zh_tw = zh_tw

    @property
    def type(self):
        """Gets the type of this GroupTranslatedContent.  # noqa: E501

        The type of object - group_translated_content.  # noqa: E501

        :return: The type of this GroupTranslatedContent.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GroupTranslatedContent.

        The type of object - group_translated_content.  # noqa: E501

        :param type: The type of this GroupTranslatedContent.  # noqa: E501
        :type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501
        allowed_values = ["group_translated_content"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def ar(self):
        """Gets the ar of this GroupTranslatedContent.  # noqa: E501


        :return: The ar of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ar

    @ar.setter
    def ar(self, ar):
        """Sets the ar of this GroupTranslatedContent.


        :param ar: The ar of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ar = ar

    @property
    def bg(self):
        """Gets the bg of this GroupTranslatedContent.  # noqa: E501


        :return: The bg of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._bg

    @bg.setter
    def bg(self, bg):
        """Sets the bg of this GroupTranslatedContent.


        :param bg: The bg of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._bg = bg

    @property
    def bs(self):
        """Gets the bs of this GroupTranslatedContent.  # noqa: E501


        :return: The bs of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._bs

    @bs.setter
    def bs(self, bs):
        """Sets the bs of this GroupTranslatedContent.


        :param bs: The bs of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._bs = bs

    @property
    def ca(self):
        """Gets the ca of this GroupTranslatedContent.  # noqa: E501


        :return: The ca of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ca

    @ca.setter
    def ca(self, ca):
        """Sets the ca of this GroupTranslatedContent.


        :param ca: The ca of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ca = ca

    @property
    def cs(self):
        """Gets the cs of this GroupTranslatedContent.  # noqa: E501


        :return: The cs of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._cs

    @cs.setter
    def cs(self, cs):
        """Sets the cs of this GroupTranslatedContent.


        :param cs: The cs of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._cs = cs

    @property
    def da(self):
        """Gets the da of this GroupTranslatedContent.  # noqa: E501


        :return: The da of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._da

    @da.setter
    def da(self, da):
        """Sets the da of this GroupTranslatedContent.


        :param da: The da of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._da = da

    @property
    def de(self):
        """Gets the de of this GroupTranslatedContent.  # noqa: E501


        :return: The de of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._de

    @de.setter
    def de(self, de):
        """Sets the de of this GroupTranslatedContent.


        :param de: The de of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._de = de

    @property
    def el(self):
        """Gets the el of this GroupTranslatedContent.  # noqa: E501


        :return: The el of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._el

    @el.setter
    def el(self, el):
        """Sets the el of this GroupTranslatedContent.


        :param el: The el of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._el = el

    @property
    def en(self):
        """Gets the en of this GroupTranslatedContent.  # noqa: E501


        :return: The en of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._en

    @en.setter
    def en(self, en):
        """Sets the en of this GroupTranslatedContent.


        :param en: The en of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._en = en

    @property
    def es(self):
        """Gets the es of this GroupTranslatedContent.  # noqa: E501


        :return: The es of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._es

    @es.setter
    def es(self, es):
        """Sets the es of this GroupTranslatedContent.


        :param es: The es of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._es = es

    @property
    def et(self):
        """Gets the et of this GroupTranslatedContent.  # noqa: E501


        :return: The et of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._et

    @et.setter
    def et(self, et):
        """Sets the et of this GroupTranslatedContent.


        :param et: The et of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._et = et

    @property
    def fi(self):
        """Gets the fi of this GroupTranslatedContent.  # noqa: E501


        :return: The fi of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._fi

    @fi.setter
    def fi(self, fi):
        """Sets the fi of this GroupTranslatedContent.


        :param fi: The fi of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._fi = fi

    @property
    def fr(self):
        """Gets the fr of this GroupTranslatedContent.  # noqa: E501


        :return: The fr of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._fr

    @fr.setter
    def fr(self, fr):
        """Sets the fr of this GroupTranslatedContent.


        :param fr: The fr of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._fr = fr

    @property
    def he(self):
        """Gets the he of this GroupTranslatedContent.  # noqa: E501


        :return: The he of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._he

    @he.setter
    def he(self, he):
        """Sets the he of this GroupTranslatedContent.


        :param he: The he of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._he = he

    @property
    def hr(self):
        """Gets the hr of this GroupTranslatedContent.  # noqa: E501


        :return: The hr of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._hr

    @hr.setter
    def hr(self, hr):
        """Sets the hr of this GroupTranslatedContent.


        :param hr: The hr of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._hr = hr

    @property
    def hu(self):
        """Gets the hu of this GroupTranslatedContent.  # noqa: E501


        :return: The hu of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._hu

    @hu.setter
    def hu(self, hu):
        """Sets the hu of this GroupTranslatedContent.


        :param hu: The hu of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._hu = hu

    @property
    def id(self):
        """Gets the id of this GroupTranslatedContent.  # noqa: E501


        :return: The id of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GroupTranslatedContent.


        :param id: The id of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._id = id

    @property
    def it(self):
        """Gets the it of this GroupTranslatedContent.  # noqa: E501


        :return: The it of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._it

    @it.setter
    def it(self, it):
        """Sets the it of this GroupTranslatedContent.


        :param it: The it of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._it = it

    @property
    def ja(self):
        """Gets the ja of this GroupTranslatedContent.  # noqa: E501


        :return: The ja of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ja

    @ja.setter
    def ja(self, ja):
        """Sets the ja of this GroupTranslatedContent.


        :param ja: The ja of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ja = ja

    @property
    def ko(self):
        """Gets the ko of this GroupTranslatedContent.  # noqa: E501


        :return: The ko of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ko

    @ko.setter
    def ko(self, ko):
        """Sets the ko of this GroupTranslatedContent.


        :param ko: The ko of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ko = ko

    @property
    def lt(self):
        """Gets the lt of this GroupTranslatedContent.  # noqa: E501


        :return: The lt of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._lt

    @lt.setter
    def lt(self, lt):
        """Sets the lt of this GroupTranslatedContent.


        :param lt: The lt of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._lt = lt

    @property
    def lv(self):
        """Gets the lv of this GroupTranslatedContent.  # noqa: E501


        :return: The lv of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._lv

    @lv.setter
    def lv(self, lv):
        """Sets the lv of this GroupTranslatedContent.


        :param lv: The lv of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._lv = lv

    @property
    def mn(self):
        """Gets the mn of this GroupTranslatedContent.  # noqa: E501


        :return: The mn of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._mn

    @mn.setter
    def mn(self, mn):
        """Sets the mn of this GroupTranslatedContent.


        :param mn: The mn of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._mn = mn

    @property
    def nb(self):
        """Gets the nb of this GroupTranslatedContent.  # noqa: E501


        :return: The nb of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._nb

    @nb.setter
    def nb(self, nb):
        """Sets the nb of this GroupTranslatedContent.


        :param nb: The nb of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._nb = nb

    @property
    def nl(self):
        """Gets the nl of this GroupTranslatedContent.  # noqa: E501


        :return: The nl of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._nl

    @nl.setter
    def nl(self, nl):
        """Sets the nl of this GroupTranslatedContent.


        :param nl: The nl of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._nl = nl

    @property
    def pl(self):
        """Gets the pl of this GroupTranslatedContent.  # noqa: E501


        :return: The pl of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._pl

    @pl.setter
    def pl(self, pl):
        """Sets the pl of this GroupTranslatedContent.


        :param pl: The pl of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._pl = pl

    @property
    def pt(self):
        """Gets the pt of this GroupTranslatedContent.  # noqa: E501


        :return: The pt of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._pt

    @pt.setter
    def pt(self, pt):
        """Sets the pt of this GroupTranslatedContent.


        :param pt: The pt of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._pt = pt

    @property
    def ro(self):
        """Gets the ro of this GroupTranslatedContent.  # noqa: E501


        :return: The ro of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ro

    @ro.setter
    def ro(self, ro):
        """Sets the ro of this GroupTranslatedContent.


        :param ro: The ro of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ro = ro

    @property
    def ru(self):
        """Gets the ru of this GroupTranslatedContent.  # noqa: E501


        :return: The ru of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._ru

    @ru.setter
    def ru(self, ru):
        """Sets the ru of this GroupTranslatedContent.


        :param ru: The ru of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._ru = ru

    @property
    def sl(self):
        """Gets the sl of this GroupTranslatedContent.  # noqa: E501


        :return: The sl of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._sl

    @sl.setter
    def sl(self, sl):
        """Sets the sl of this GroupTranslatedContent.


        :param sl: The sl of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._sl = sl

    @property
    def sr(self):
        """Gets the sr of this GroupTranslatedContent.  # noqa: E501


        :return: The sr of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._sr

    @sr.setter
    def sr(self, sr):
        """Sets the sr of this GroupTranslatedContent.


        :param sr: The sr of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._sr = sr

    @property
    def sv(self):
        """Gets the sv of this GroupTranslatedContent.  # noqa: E501


        :return: The sv of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._sv

    @sv.setter
    def sv(self, sv):
        """Sets the sv of this GroupTranslatedContent.


        :param sv: The sv of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._sv = sv

    @property
    def tr(self):
        """Gets the tr of this GroupTranslatedContent.  # noqa: E501


        :return: The tr of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._tr

    @tr.setter
    def tr(self, tr):
        """Sets the tr of this GroupTranslatedContent.


        :param tr: The tr of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._tr = tr

    @property
    def vi(self):
        """Gets the vi of this GroupTranslatedContent.  # noqa: E501


        :return: The vi of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._vi

    @vi.setter
    def vi(self, vi):
        """Sets the vi of this GroupTranslatedContent.


        :param vi: The vi of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._vi = vi

    @property
    def pt_br(self):
        """Gets the pt_br of this GroupTranslatedContent.  # noqa: E501


        :return: The pt_br of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._pt_br

    @pt_br.setter
    def pt_br(self, pt_br):
        """Sets the pt_br of this GroupTranslatedContent.


        :param pt_br: The pt_br of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._pt_br = pt_br

    @property
    def zh_cn(self):
        """Gets the zh_cn of this GroupTranslatedContent.  # noqa: E501


        :return: The zh_cn of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._zh_cn

    @zh_cn.setter
    def zh_cn(self, zh_cn):
        """Sets the zh_cn of this GroupTranslatedContent.


        :param zh_cn: The zh_cn of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._zh_cn = zh_cn

    @property
    def zh_tw(self):
        """Gets the zh_tw of this GroupTranslatedContent.  # noqa: E501


        :return: The zh_tw of this GroupTranslatedContent.  # noqa: E501
        :rtype: GroupContent
        """
        return self._zh_tw

    @zh_tw.setter
    def zh_tw(self, zh_tw):
        """Sets the zh_tw of this GroupTranslatedContent.


        :param zh_tw: The zh_tw of this GroupTranslatedContent.  # noqa: E501
        :type: GroupContent
        """

        self._zh_tw = zh_tw

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GroupTranslatedContent, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GroupTranslatedContent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
