# coding: utf-8

"""
    Intercom API

    The intercom API reference.  # noqa: E501

    OpenAPI spec version: 2.11
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ArticleSearchHighlights(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'article_id': 'str',
        'highlighted_title': 'list[ArticleSearchHighlightsHighlightedTitle]',
        'highlighted_summary': 'list[list[object]]'
    }

    attribute_map = {
        'article_id': 'article_id',
        'highlighted_title': 'highlighted_title',
        'highlighted_summary': 'highlighted_summary'
    }

    def __init__(self, article_id=None, highlighted_title=None, highlighted_summary=None):  # noqa: E501
        """ArticleSearchHighlights - a model defined in Swagger"""  # noqa: E501
        self._article_id = None
        self._highlighted_title = None
        self._highlighted_summary = None
        self.discriminator = None
        self.article_id = article_id
        self.highlighted_title = highlighted_title
        self.highlighted_summary = highlighted_summary

    @property
    def article_id(self):
        """Gets the article_id of this ArticleSearchHighlights.  # noqa: E501

        The ID of the corresponding article.  # noqa: E501

        :return: The article_id of this ArticleSearchHighlights.  # noqa: E501
        :rtype: str
        """
        return self._article_id

    @article_id.setter
    def article_id(self, article_id):
        """Sets the article_id of this ArticleSearchHighlights.

        The ID of the corresponding article.  # noqa: E501

        :param article_id: The article_id of this ArticleSearchHighlights.  # noqa: E501
        :type: str
        """
        if article_id is None:
            raise ValueError("Invalid value for `article_id`, must not be `None`")  # noqa: E501

        self._article_id = article_id

    @property
    def highlighted_title(self):
        """Gets the highlighted_title of this ArticleSearchHighlights.  # noqa: E501

        An Article title highlighted.  # noqa: E501

        :return: The highlighted_title of this ArticleSearchHighlights.  # noqa: E501
        :rtype: list[ArticleSearchHighlightsHighlightedTitle]
        """
        return self._highlighted_title

    @highlighted_title.setter
    def highlighted_title(self, highlighted_title):
        """Sets the highlighted_title of this ArticleSearchHighlights.

        An Article title highlighted.  # noqa: E501

        :param highlighted_title: The highlighted_title of this ArticleSearchHighlights.  # noqa: E501
        :type: list[ArticleSearchHighlightsHighlightedTitle]
        """
        if highlighted_title is None:
            raise ValueError("Invalid value for `highlighted_title`, must not be `None`")  # noqa: E501

        self._highlighted_title = highlighted_title

    @property
    def highlighted_summary(self):
        """Gets the highlighted_summary of this ArticleSearchHighlights.  # noqa: E501

        An Article description and body text highlighted.  # noqa: E501

        :return: The highlighted_summary of this ArticleSearchHighlights.  # noqa: E501
        :rtype: list[list[object]]
        """
        return self._highlighted_summary

    @highlighted_summary.setter
    def highlighted_summary(self, highlighted_summary):
        """Sets the highlighted_summary of this ArticleSearchHighlights.

        An Article description and body text highlighted.  # noqa: E501

        :param highlighted_summary: The highlighted_summary of this ArticleSearchHighlights.  # noqa: E501
        :type: list[list[object]]
        """
        if highlighted_summary is None:
            raise ValueError("Invalid value for `highlighted_summary`, must not be `None`")  # noqa: E501

        self._highlighted_summary = highlighted_summary

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ArticleSearchHighlights, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ArticleSearchHighlights):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
